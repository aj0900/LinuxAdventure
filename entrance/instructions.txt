# Add another ASCII graphic?

      Welcome to OS! Long ago, a group of brave developers created this land as a sanctuary against a great
      evil: proprietary software. Led by Linus Torvalds, the Wizard of OS, these individuals sought to protect
      the distribution of free software and source code from those who desired only to sell it, guarding their
      source code from the eyes of the greater development community. As a way to remind future generations of
      the reason for their struggle, the Wizard of OS hid several clues around the land for new developers to
      discover and piece together. Find all of these clues and you will be able to answer the great question:
      
      What is the meaning of the open-source movement?
      
      The clues can be collected in any order, and you can view the ones you already have by looking at your
      notepad. Good luck, and safe travels!
------------------------------------------------------------------------------------------------------------
 TIP: Need to move backwards? Take advantage of Linux's 'dot' notation to return to where you just were.
      This prior directory, the one our current subdirectory is located in, is called the parent directory.
      It's simple. When you want to return to the parent directory, just type:

      >> cd ..		(Don't include the >>, that's just to indicate that we're using the terminal.)

      Those two periods indicate that we're talking about the parent directory, and using them with the
      cd command will take you back there! This is extremely useful for when you find yourself having to
      constantly navigate back and forth between directories.

 TIP: You're probably already tired of typing 'cat instructions.txt'. Luckily, we have a few workarounds.
      The first is to simply press the up arrow. Linux stores a history of your commands, and you can simply
      move through until you get to the one you want to use. Another way is to use the 'alias' command like so:

      >> alias read="cat instructions.txt"

      This command allows you to set a custom name for a given set of commands. In the example, we would now be 
      able to run 'cat instructions.txt' by simply typing 'read'. WARNING: Don't put spaces around the = sign!
